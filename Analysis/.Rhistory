colour = truck_perf)) +
geom_path(aes(group = participant))
plt_acc
str(df_decisions)
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ungroup() %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path(aes(group = participant))
plt_acc
View(plt_acc)
View(plt_acc[["data"]])
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ungroup() %>%
ggplot(aes(delta, mean_acc)) +
geom_path(aes(group = participant))
plt_acc
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ungroup() %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path(aes(group = participant))
plt_acc
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ungroup() %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_line(aes(group = participant))
plt_acc
#### PLOT: chance of success on y-axis ####
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path()
plt_acc
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path(alpha = 0.3) +
scale_colour_ptol()
plt_acc
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path(alpha = 0.5) +
scale_colour_ptol()
plt_acc
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path(alpha = 0.6) +
scale_colour_ptol()
plt_acc
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path(alpha = 0.6) +
scale_colour_ptol() +
theme_bw()
plt_acc
#### PLOT: chance of success on y-axis ####
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path() +
scale_colour_ptol() +
theme_bw()
plt_acc
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path() +
scale_colour_ptol() +
theme_bw() +
facet_wrap(~participant)
plt_acc
View(plt_acc)
View(plt_acc[["data"]])
rm(list = ls())
library(tidyverse)
load("scratch/data/df_decisions")
df_decisions <- as.tibble(df_decisions)
(df_decisions %>%
select(participant, truck_perf, delta, placed_x) %>%
mutate(norm_dist = abs(placed_x / delta)) %>%
group_by(participant, truck_perf, delta) %>%
summarise(
mean_position = mean(norm_dist),
var_dist = var(norm_dist))) -> df
plt <- ggplot(df, aes(x = delta, y = mean_position, colour = truck_perf))
plt <- plt + geom_path(aes(group = participant), alpha = 0.33)
plt <- plt + geom_smooth(se = FALSE, size = 3)
plt <- plt + scale_colour_viridis_d(end = 0.5)
plt
(df %>%
group_by(truck_perf, delta) %>%
summarise(
n = n(),
position = mean(mean_position),
std_err_p = sd(mean_position)/ sqrt(n),
variance = mean(var_dist),
std_err_v = sd(var_dist)/ sqrt(n))) -> df2
# plot how mean position varies with delta and condition
plt <- ggplot(df2, aes(
x = delta,
y = position,
ymin = position - 1.96 * std_err_p,
ymax = position + 1.96 * std_err_p,
colour = truck_perf))
plt <- plt + geom_errorbar(colour = "gray") + geom_path()
plt <- plt + scale_y_continuous(limits = c(0, 1), expand = c(0, 0))
plt <- plt + scale_x_continuous(breaks = unique(df$delta))
plt <- plt + theme_bw()
plt
head(df)
pos_aov <- aov(data = df, mean_position ~ delta * truck_perf)
summary(pos_aov)
plt <- ggplot(df2, aes(
x = delta,
y = variance,
ymin = variance - 1.96 * std_err_v,
ymax = variance + 1.96 * std_err_v,
colour = truck_perf))
plt <- plt + geom_errorbar(colour = "gray") + geom_path()
plt <- plt + scale_y_continuous(expand = c(0, 0))
plt <- plt + scale_x_continuous(breaks = unique(df$delta))
plt <- plt + theme_bw()
plt
var_aov <- aov(data = df, var_dist ~ delta * truck_perf)
summary(var_aov)
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path() +
scale_colour_ptol() +
theme_bw()
plt_acc
plt <- ggplot(df2, aes(
x = delta,
y = position,
ymin = position - 1.96 * std_err_p,
ymax = position + 1.96 * std_err_p,
colour = truck_perf))
plt <- plt + geom_errorbar(colour = "gray") + geom_path()
plt <- plt + scale_y_continuous(limits = c(0, 1), expand = c(0, 0))
plt <- plt + scale_x_continuous(breaks = unique(df$delta))
plt <- plt + theme_bw()
plt
(df_decisions %>%
select(participant, truck_perf, delta, placed_x) %>%
mutate(norm_dist = abs(placed_x / delta)) %>%
group_by(participant, truck_perf, delta) %>%
summarise(
mean_position = mean(norm_dist),
var_dist = var(norm_dist))) -> df
plt <- ggplot(df, aes(x = delta, y = mean_position, colour = truck_perf))
plt <- plt + geom_path(aes(group = participant), alpha = 0.33)
plt <- plt + geom_smooth(se = FALSE, size = 3)
plt <- plt + scale_colour_viridis_d(end = 0.5)
plt
plt <- ggplot(df2, aes(
x = delta,
y = variance,
ymin = variance - 1.96 * std_err_v,
ymax = variance + 1.96 * std_err_v,
colour = truck_perf))
plt <- plt + geom_errorbar(colour = "gray") + geom_path()
plt <- plt + scale_y_continuous(expand = c(0, 0))
plt <- plt + scale_x_continuous(breaks = unique(df$delta))
plt <- plt + theme_bw()
plt
summary(pos_aov)
pos_aov <- aov(data = df, mean_position ~ truck_perf * delta)
summary(pos_aov)
pos_aov <- aov(data = df2, mean_position ~ truck_perf * delta)
head(df2)
pos_aov <- aov(data = df2, position ~ truck_perf * delta)
var_aov <- aov(data = df2, variance ~ delta * truck_perf)
summary(pos_aov)
plt_mean <- ggplot(df2, aes(
x = delta,
y = position,
ymin = position - 1.96 * std_err_p,
ymax = position + 1.96 * std_err_p,
colour = truck_perf))
plt_mean <- plt_mean + geom_errorbar(colour = "gray") + geom_path()
plt_mean <- plt_mean + scale_y_continuous(limits = c(0, 1), expand = c(0, 0))
plt_mean <- plt_mean + scale_x_continuous(breaks = unique(df$delta))
plt_mean <- plt_mean + theme_bw()
plt_mean
plt_acc
View(df2)
View(df)
head(df)
df %>%
group_by(participant) %>%
select(-var_dist)
df %>%
group_by(participant) %>%
select(-var_dist) %>%
unite(truck_perf:delta,
sep = "_")
df %>%
group_by(participant) %>%
select(-var_dist) %>%
unite("value",
truck_perf:delta)
df %>%
group_by(participant) %>%
select(-var_dist) %>%
unite("value",
truck_perf:delta) %>%
spread(value, mean_position)
SPSS_mean <- df %>%
group_by(participant) %>%
select(-var_dist) %>%
unite("value",
truck_perf:delta) %>%
spread(value, mean_position)
View(SPSS_mean)
save(SPSS_mean, file = "scratch/data/SPSS_mean.txt")
write.csv(SPSS_mean, file = "scratch/data/SPSS_mean", row.names = F)
write.csv(SPSS_mean, file = "scratch/data/SPSS_mean.txt", row.names = F)
temp <- SPSS_mean
round(SPSS_mean, digits = 3)
# sort mean pos
SPSS_mean <- df %>%
group_by(participant) %>%
mutate(mean_position = round(mean_position, digits = 3))
select(-var_dist) %>%
unite("value",
truck_perf:delta) %>%
spread(value, mean_position)
SPSS_mean <- df %>%
group_by(participant) %>%
mutate(mean_position = round(mean_position, digits = 3)) %>%
select(-var_dist) %>%
unite("value",
truck_perf:delta) %>%
spread(value, mean_position)
View(SPSS_mean)
write.csv(SPSS_mean, file = "scratch/data/SPSS_mean.txt", row.names = F)
prob_success <- function(pos, delta, beta, max_speed){
# get observations
y <- (round(rbeta(100000, beta, beta)*max_speed)+1) * travel_time
# get prob of success
chance1 <- sum(y >= delta - abs(pos))/length(y)
chance2 <- sum(y >= delta + abs(pos))/length(y)
# output
chance <- (chance1 + chance2)/2
return(chance)
}
prob_success(0, 530, 10000, 8)
travel_time = 100
prob_success(0, 530, 10000, 8)
prob_success(1, 530, 10000, 8)
prob_success(530, 530, 10000, 8)
View(df_decisions)
prob_success(3, 530, 10000, 8)
prob_success(531, 530, 10000, 8)
prob_success(600, 530, 10000, 8)
prob_success(630, 530, 10000, 8)
prob_success <- function(pos, delta, beta, max_speed){
# get observations
y <- (round(rbeta(100000, beta, beta)*max_speed)+1) * travel_time
# get prob of success
chance1 <- sum(y >= delta - abs(pos))/length(y)
chance2 <- sum(y >= delta + abs(pos))/length(y)
# output
chance <- (chance1 + chance2)/2
return(chance)
return(y)
}
prob_success(0, 530, 10000, 8)
prob_success <- function(pos, delta, beta, max_speed){
# get observations
y <- (round(rbeta(100000, beta, beta)*max_speed)+1) * travel_time
# get prob of success
chance1 <- sum(y >= delta - abs(pos))/length(y)
chance2 <- sum(y >= delta + abs(pos))/length(y)
# output
chance <- (chance1 + chance2)/2
return(chance)
}
beta = 10000
max_speed = 8
y <- (round(rbeta(100000, beta, beta)*max_speed)+1) * travel_time
range(y)
prob_success <- function(pos, delta, beta, max_speed){
# get observations
y <- (round(rbeta(100000, beta, beta)*max_speed)+1) * travel_time + 30
# get prob of success
chance1 <- sum(y >= delta - abs(pos))/length(y)
chance2 <- sum(y >= delta + abs(pos))/length(y)
# output
chance <- (chance1 + chance2)/2
return(chance)
}
prob_success(0, 530, 10000, 8)
prob_success(1, 530, 10000, 8)
rm(list = ls90)
rm(list = ls())
#### Avatar script ####
# read in the data files and save them
#### Library ####
library(tidyverse)
library(R.matlab)
#### functions ####
# get probability of success
prob_success <- function(pos, delta, beta, max_speed){
# get observations
y <- (round(rbeta(100000, beta, beta)*max_speed)+1) * travel_time + 30
# get prob of success
chance1 <- sum(y >= delta - abs(pos))/length(y)
chance2 <- sum(y >= delta + abs(pos))/length(y)
# output
chance <- (chance1 + chance2)/2
return(chance)
}
#### Constants ####
travel_time <- 100
#### Read in screen data ####
# set path
results_files <- dir("data/Essex/Screen_info/")
# setup data_frame
df_screen_info <- data.frame(participant = character(),
x_res = numeric(),
y_res = numeric())
df_deltas <- data.frame(participant = character(),
delta = numeric())
df_beta <- data.frame(participant = character(),
beta1 = numeric(),
beta2 = numeric())
df_avatar_info <- data.frame(participant = character(),
max_speed = numeric(),
reach = numeric())
# loop throuh and read in data
for(f in unique(results_files)){
# read in file
temp_df <- readMat(paste("data/Essex/Screen_info/", f, sep = ""))
# get participant name
Participant <- strsplit(f, '[_.]')[[1]]
Participant <- Participant[1]
# resolutions
x_res <- as.numeric(temp_df$params[1])*2
y_res <- as.numeric(temp_df$params[2])*2
# betas
betas <- temp_df$box[[2]]
beta1 <- betas[1]
beta2 <- betas[2]
# Delta
Delta <- unlist(temp_df$params[3])
# reach
reach <- as.numeric(temp_df$box[4])
# max_speed
max_speed <- as.numeric(temp_df$box[1])
# fill data frame
# screen
df_screen_info <- rbind(df_screen_info, data.frame(participant = Participant,
x_res = x_res,
y_res = y_res))
# deltas
df_deltas <- rbind(df_deltas, data.frame(participant = Participant,
delta = Delta))
# beta
df_beta <- rbind(df_beta, data.frame(participant = Participant,
beta1 = beta1,
beta2 = beta2))
# avatar
df_avatar_info <- rbind(df_avatar_info, data.frame(participant = Participant,
max_speed = max_speed,
reach = reach))
}
# tidy
rm(betas,
temp_df,
beta1,
beta2,
Delta,
f,
max_speed,
Participant,
reach,
results_files,
x_res,
y_res)
# save these files
save(df_beta, file = "scratch/data/df_beta")
save(df_deltas, file = "scratch/data/df_deltas")
save(df_screen_info, file = "scratch/data/df_screen_info")
save(df_avatar_info, file = "scratch/data/df_avater_info")
#### Read in Decision data ####
# setpath
results_files <- dir("data/Essex/Decisions/")
# setup data.frame
df_decisions <- data.frame(participant = character(),
condition = character(),
spread = character(),
block = numeric(),
trial = numeric(),
delta = numeric(),
RT = numeric(),
initial_X = numeric(),
placed_X = numeric(),
target_side = numeric(),
speed = numeric(),
success = numeric())
# loop through files
for(f in results_files){
# read in file
d <- read.csv(paste("data/Essex/Decisions/", f, sep = ""), header = T)
# Participant
Participant <- strsplit(f, '[_.]')[[1]]
Participant <- Participant[1]
# add in Participant
d$participant <- Participant
# combine data
df_decisions <- rbind(df_decisions, d)
}
# tidy
rm(d, f, Participant, results_files)
# arrange this
df_decisions <- select(df_decisions,
participant,
everything())
# sort colnames to be lower case
names(df_decisions) <- tolower(names(df_decisions))
# add in an order variable
# empty vector
rand_first <- c()
# loop through to classify
for(p in unique(df_decisions$participant)){
# get subset
ss <- df_decisions[df_decisions$participant == p,]
# get first block condition
first_cond <- ss$spread[ss$block == 1 & ss$trial == 1]
# check block
if(first_cond == 1){
rf <- 1
} else {
rf <- 0
}
# add to empty vector
rand_first <- c(rand_first, rep(rf, nrow(ss)))
}
# add to data frame
df_decisions$rand_first <- rand_first
# tidy
rm(first_cond, p, rand_first, rf, ss)
# labels for spread
df_decisions$truck_perf <- "Variable"
df_decisions$truck_perf[df_decisions$spread > 1] = "Constant"
# add in a standard sep
for(p in unique(df_decisions$participant)){
df_decisions$standard[df_decisions$participant == p] <- as.numeric(as.factor(df_decisions$Delta[df_decisions$participant == p]))
}
rm(p)
# add in the max_speed info
df_decisions <- merge(df_decisions, df_avatar_info)
# add in chance of success
df_decisions <- df_decisions %>%
rowwise() %>%
mutate(chance = prob_success(placed_x, delta, spread, max_speed)) %>%
ungroup()
# save this
save(df_decisions, file = "scratch/data/df_decisions")
plt_acc <- df_decisions %>%
mutate(participant = as.factor(participant)) %>%
group_by(participant, delta, truck_perf) %>%
summarise(mean_acc = mean(chance)) %>%
ggplot(aes(delta, mean_acc,
colour = truck_perf)) +
geom_path() +
scale_colour_ptol() +
theme_bw()
plt_acc
