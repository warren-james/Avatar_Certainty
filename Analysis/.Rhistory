-speed) %>% # only for now
mutate(Norm_Delta = delta/max(delta)) %>%
filter(Abs_Norm_pos < 1 + 1e-8) %>%
mutate(Abs_Norm_pos = (Abs_Norm_pos + 1e-5)*0.9999,
dist_type = ifelse(Norm_Delta > median(Norm_Delta), "far", "close"))
View(model_data)
model_truckonly <- model_data %>%
filter(condition_label == "truck")
View(df_Aberdeen_decisions)
head(model_data)
X <- model.matrix(Abs_Norm_pos ~ (dist_type + truck_perf + condition_label)^3,
data = model_data)
stan_df <- list(
N = nrow(model_data),
K = ncol(X),
y = model_data$Abs_Norm_pos,
X = X
)
m_stan_full_pos <- stan(
file = "models/stan_files/stan_model.stan",
data = stan_df,
chains = 1,
warmup = 1000,
iter = 2000,
refresh = 100
)
head(model_data)
samples <- rstan::extract(m_stan_full_pos)
temp <- samples$mu
View(temp)
c(truck_perf, dist_type, condition_label)
a <- c(truck_perf, dist_type, condition_label)
a <- c("truck_perf", "dist_type", "condition_label")
interactions <- a
interaction[1]
rm(interactions)
a[1]
STAN_plt <- function(model_output, dataframe, ints){
output <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe) %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(length(ints) == 2){
output <- output + facet_wrap(~ints[2])
} if(lenfth(ints) == 3){
output <- output + facet_grid(ints[2]~ints[3])
}
return(output)
}
STAN_plt <- function(model_output, dataframe, ints){
output <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe) %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(length(ints) == 2){
output <- output + facet_wrap(~ints[2])
} else if(lenfth(ints) == 3){
output <- output + facet_grid(ints[2]~ints[3])
}
return(output)
}
plt_mu_df_dist_exp <- make_plt(samples$mu, model_data, c(truck_perf, dist_type, condition_label))
plt_mu_df_dist_exp$labels$x <- "Predicted Estimated Mean Success Rate"
plt_mu_df_dist_exp$labels$colour <- "Group"
plt_mu_df_dist_exp$labels$fill <- "Group"
plt_mu_df_dist_exp
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, c(truck_perf, dist_type, condition_label))
plt_stan_full_pos$labels$x <- "Predicted Estimated Mean Success Rate"
plt_stan_full_pos$labels$colour <- "Group"
plt_stan_full_pos$labels$fill <- "Group"
plt_stan_full_pos
output =as.tibble(model_output)
output =as.tibble(samples$mu)
temp <- output %>% gather(key = "remove", value = "pred_mu")
temp <- output %>% gather(key = "remove", value = "pred_mu") %>% group_by(remove) %>% mutate(row_num = strsplit(remove, split = "V")[[1]][2])
temp <- output %>% gather(key = "remove", value = "pred_mu") %>% group_by(remove) %>% mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>% select(-remove)
temp <- output %>% gather(key = "remove", value = "pred_mu") %>% group_by(remove) %>% mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>% ungroup() %>% select(-remove)
head(model_data)
model_data <- model_data %>%
rownames_to_column(var = "row_num") %>%
select(row_num, truck_perf, condition_label, dist_type, Abs_Norm_pos)
temp <- output %>% gather(key = "remove", value = "pred_mu") %>% group_by(remove) %>% mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>% ungroup() %>% select(-remove) %>% merge(model_data)
temp <- output %>% gather(key = "remove", value = "pred_mu") %>% group_by(remove) %>% mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>% ungroup() %>% select(-remove) %>% merge(model_data) %>% ggplot(aes(pred_mu, colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol() + facet_grid(condition_label~dist_type)
temp
rm(temp)
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, c(truck_perf, dist_type, condition_label))
head(model_data)
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, c("truck_perf", "dist_type", "condition_label"))
plt_stan_full_pos$labels$x <- "Predicted Mean Placement Position"
plt_stan_full_pos$labels$colour <- "Group"
plt_stan_full_pos$labels$fill <- "Group"
plt_stan_full_pos
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, c("truck_perf", "dist_type", "condition_label"))
plt_stan_full_pos$labels$x <- "Predicted Mean Placement Position"
plt_stan_full_pos$labels$colour <- "Group"
plt_stan_full_pos$labels$fill <- "Group"
plt_stan_full_pos
STAN_plt <- function(model_output, dataframe, ints){
output <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe) %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(length(ints) == 2){
output <- output + facet_wrap(~ints[2])
} else if(length(ints) == 3){
output <- output + facet_grid(ints[2]~ints[3])
}
return(output)
}
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, c("truck_perf", "dist_type", "condition_label"))
plt_stan_full_pos$labels$x <- "Predicted Mean Placement Position"
plt_stan_full_pos$labels$colour <- "Group"
plt_stan_full_pos$labels$fill <- "Group"
plt_stan_full_pos
head(model_data)
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, c("truck_perf", "dist_type", "condition_label"))
plt_stan_full_pos
head(model_data)
model_data[,2:4]
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, model_data[,2:4])
plt_stan_full_pos
head(model_data)
model_data[3]
STAN_plt <- function(model_output, dataframe, effs){
output <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe) %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(effs == 2){
output <- output + facet_wrap(~model_data[3])
} else if(effs == 3){
output <- output + facet_grid(model_data[3]~model_data[4])
}
return(output)
}
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, model_data[,2:4])
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, 3)
plt_stan_full_pos
head(model_data)
model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density()
model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_wrap(~[3])
model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_wrap(~c(3))
model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_wrap(~model_data[3])
model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_wrap(~model_data[,3])
model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_wrap(~dist_type)
model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_grid(condition_label~dist_type)
dev.off()
model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3)
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3)
if(colnames(model_data[2]) == "dist_type"){
temp <- temp + facet_wrap(~dist_type)
}
temp
model_data[2]
if(colnames(model_data[3]) == "dist_type"){
temp <- temp + facet_wrap(~dist_type)
}
temp
model_data[3]
if(colnames(model_data[4]) == "dist_type"){
temp <- temp + facet_wrap(~dist_type)
}
temp
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3)
if(colnames(model_data[4]) == "dist_type"){
temp <- temp + facet_wrap(~dist_type)
}
temp
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3)
if(colnames(model_data[4]) == "dist_type"){
somethign = "dist_type"
temp <- temp + facet_wrap(~something)
}
temp
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3)
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3)
temp
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_wrap(~dist_type)
temp
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_wrap(~model_data[3])
temp
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_wrap(~model_data[[3]])
temp
STAN_plt <- function(model_output, dataframe, effs){
output <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe) %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(effs == 2){
output <- output + facet_wrap(~model_data[[3]])
} else if(effs == 3){
output <- output + facet_grid(model_data[[3]]~model_data[[4]])
}
return(output)
}
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, effs = 3)
plt_stan_full_pos$labels$x <- "Predicted Mean Placement Position"
plt_stan_full_pos$labels$colour <- "Truck Performance"
plt_stan_full_pos$labels$fill <- "Truck Performance"
plt_stan_full_pos
temp
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_grid(model_data[[4~model_data[[3]])
temp
temp <- model_data %>%
ggplot(aes(Abs_Norm_pos,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
facet_grid(model_data[[4]]~model_data[[3]])
temp
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, 3)
plt_stan_full_pos
effs = c(model_data[[2:4]])
effs = c(model_data[[,2:4]])
effs = c(model_data[,2:4])
View(effs)
effs[1]
STAN_plt <- function(model_output, dataframe, effs){
output <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe) %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(length(effs) == 2){
output <- output + facet_wrap(~effs[2])
} else if(length(effs) == 3){
output <- output + facet_grid(effs[2]~effs[3])
}
return(output)
}
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, model_data[,2:4])
plt_stan_full_pos$labels$x <- "Predicted Mean Placement Position"
plt_stan_full_pos$labels$colour <- "Truck Performance"
plt_stan_full_pos$labels$fill <- "Truck Performance"
plt_stan_full_pos
STAN_plt <- function(model_output, dataframe, effs){
output <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe) %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(effs == 2){
output <- output + facet_wrap(~dataframe[[3]])
} else if(effs == 3){
output <- output + facet_grid(dataframe[[3]]~dataframe[[4]])
}
return(output)
}
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, effs = 3)
plt_stan_full_pos$labels$x <- "Predicted Mean Placement Position"
plt_stan_full_pos$labels$colour <- "Truck Performance"
plt_stan_full_pos$labels$fill <- "Truck Performance"
plt_stan_full_pos
head(model_data)
model_data %>% ggplot(aes(Abs_Norm_pos)) + geom_density() + facet_wrap(~[[3]])
model_data %>% ggplot(aes(Abs_Norm_pos)) + geom_density() + facet_wrap(~model_data[[3]])
STAN_plt <- function(model_output, dataframe, effs){
# setup plt data
plt_data <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe)
# make plt to output
output <- plt_data %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(effs == 2){
output <- output + facet_wrap(~plt_data[[3]])
} else if(effs == 3){
output <- output + facet_grid(plt_data[[3]]~plt_data[[4]])
}
return(output)
}
warnings()
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, effs = 3)
plt_stan_full_pos$labels$x <- "Predicted Mean Placement Position"
plt_stan_full_pos$labels$colour <- "Truck Performance"
plt_stan_full_pos$labels$fill <- "Truck Performance"
plt_stan_full_pos
plt_stan_full_pos[["data"]]
head(plt_stan_full_pos[["data"]])
STAN_plt <- function(model_output, dataframe, effs){
# setup plt data
plt_data <- as.tibble(model_output) %>%
gather(key = "remove",
value = "pred_mu") %>%
group_by(remove) %>%
mutate(row_num = strsplit(remove, split = "V")[[1]][2]) %>%
ungroup() %>%
select(-remove) %>%
merge(dataframe)
# make plt to output
output <- plt_data %>%
ggplot(aes(pred_mu,
colour = truck_perf,
fill = truck_perf)) +
geom_density(alpha = 0.3) +
theme_minimal() +
theme(legend.position = "bottom") +
ggthemes::scale_color_ptol() +
ggthemes::scale_fill_ptol()
if(effs == 2){
output <- output + facet_wrap(~plt_data[[4]])
} else if(effs == 3){
output <- output + facet_grid(plt_data[[4]]~plt_data[[5]])
}
return(output)
}
plt_stan_full_pos <- STAN_plt(samples$mu, model_data, effs = 3)
plt_stan_full_pos$labels$x <- "Predicted Mean Placement Position"
plt_stan_full_pos$labels$colour <- "Truck Performance"
plt_stan_full_pos$labels$fill <- "Truck Performance"
plt_stan_full_pos
HPDI_sfp <- plt_stan_full_pos[["data"]] %>%
group_by(truck_perf, condition_label, dist_type) %>%
summarise(mean_est = mean(pred_mu),
lower = HPDI(pred_mu, 0.95)[1],
upper = HPDI(pred_mu, 0.95)[2])
HPDI_sfp
temp <- posterior_predict(m_stan_full_pos)
print(m_stan_full_pos, pars = c("mu", "phi"))
samples$beta
post_preds <- function(m, pred_dat, x){
post <- rstan::extract(m)
beta <- colMeans(post$beta)
gamma <- colMeans(post$gamma)
mu  <- plogis(X %*% beta)
phi <- exp(X %*% gamma)
A <- mu * phi
B <- (1 - mu) * phi
n <- length(x)
p <- unlist(map2(A, B, dbeta, x = x))
return(p)
}
post_preds(m_stan_full_pos, X, X)
rm(list = ls())
